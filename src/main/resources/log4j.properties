### 设置###
log4j.rootLogger = stdout,debug,,error

### 输出信息到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
#设置输出样式
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#日志输出信息格式为
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n


### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
log4j.appender.debug = org.apache.log4j.DailyRollingFileAppender
log4j.appender.debug.File = E://logs/debug.log
#是否在原日志基础上追加输出日志。true，默认追加。false，清掉原来日志重新添加
log4j.appender.debug.Append = true
#DEBUG以上级别输出，Threshold，入口，临界值
log4j.appender.debug.Threshold = DEBUG
log4j.appender.debug.layout = org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


### 输出ERROR 级别以上的日志到=E://logs/error.log ###
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.File =E://logs/error.log
log4j.appender.error.Append = true
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]


#Layout参数：设置输出样式
#PatternLayout：根据指定的转换模式格式化日志输出
#HTMLLayout：格式化日志输出为HTML表格
#XMLLayout：格式化日志输出为XML文件
#SimpleLayout：以一种非常简单的方式格式化日志输出
TTCCLayout：包含日志产生的时间、线程、类别等信息