
#配置根 Logger ，其语法为：
#log4j.rootLogger =  level, appenderName, appenderName, …
#其中， level 是日志记录的优先级，分为 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 ALL 或者您定义的级别。
#Log4j 建议只使用四个级别 ，优先级从高到低分别是 ERROR 、 WARN 、 INFO 、 DEBUG 。
#通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。
#比如在这里定 义了 INFO 级别，则应用程序中所有 DEBUG 级别的日志信息将不被打印出来 。
#appenderName 就是指 B 日志信息输出到哪个地方。您可以同时指定多个输出目的地。

log4j.rootLogger = ERROR,E,S,D
### 日志输出信息到控制台 ###
log4j.appender.S = org.apache.log4j.ConsoleAppender
log4j.appender.S.Target = System.out
#设置输出样式
log4j.appender.S.layout = org.apache.log4j.PatternLayout
#日志输出信息格式为
log4j.appender.S.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n


### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = E://logs/debug.log
#是否在原日志基础上追加输出日志。true，默认追加。false，清掉原来日志重新添加
log4j.appender.D.Append = true
#DEBUG以上级别输出，Threshold，入口，临界值
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


### 输出ERROR 级别以上的日志到=E://logs/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =E://logs/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]


#Layout参数：设置输出样式
#PatternLayout：根据指定的转换模式格式化日志输出
#HTMLLayout：格式化日志输出为HTML表格
#XMLLayout：格式化日志输出为XML文件
#SimpleLayout：以一种非常简单的方式格式化日志输出
TTCCLayout：包含日志产生的时间、线程、类别等信息